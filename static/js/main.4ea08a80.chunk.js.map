{"version":3,"sources":["config/noty.js","components/Home.js","redux/actions.js","components/Login.js","components/SignUp.js","components/Authentication.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["showNotification","text","Noty","layout","theme","type","timeout","show","client","w3cwebsocket","Home","dispatch","useDispatch","data","useSelector","state","search","emitter","names","originCities","destCities","dataString","i","object","name","Math","floor","random","length","origin","destination","secret_key","crypto","createHash","update","JSON","stringify","digest","cipher","createCipheriv","encrypted","final","console","log","send","useEffect","onopen","setInterval","onmessage","message","dataFromServer","parse","payload","addData","onclose","filtered","filter","dateItem","toLowerCase","indexOf","className","onClick","value","onChange","e","target","placeholder","map","index","Login","setType","users","localStorage","getItem","useState","username","password","setValue","handleSubmit","a","findIndex","user","bcrypt","compare","SignUp","hash","hashPsw","push","setItem","Authentication","App","isLoggedIn","initialState","reducer","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ea08a80.chunk.js","sourcesContent":["import Noty from \"noty\";\r\n\r\n//noty js config to show notifications\r\nexport const showNotification = (text)=> {\r\n     new Noty({\r\n         text : text,\r\n         layout : \"bottomRight\",\r\n         theme : \"nest\",\r\n         type : \"alert\",\r\n         timeout : 750,\r\n     }).show();\r\n};","import React,{useEffect} from 'react';\r\nimport { useDispatch , useSelector } from \"react-redux\";\r\nimport { logoutUser } from \"../redux/actions\";\r\nimport { w3cwebsocket } from \"websocket\";\r\nimport crypto from \"crypto\";\r\nimport { addData , updateSearch } from \"../redux/actions\";\r\n\r\n//creating connection with the socket server.\r\nconst client = new w3cwebsocket('ws://njs-listener-socket.herokuapp.com');\r\n\r\nfunction Home() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.data);\r\n    const search = useSelector(state => state.search);\r\n    //NJS-Emitter Function..\r\n    const emitter=()=> {\r\n        const names = [\"Deepak Jena\",\"Tony Stark\",\"Bruce Wayne\",\"Steven Rogers\",\"Matthew Murdock\",\"Barry Allen\",\"Bruce Banner\",\"Peter Parker\",\"Clark Kent\",\"Frank Castle\"];\r\n        const originCities = [\"Surat\",\"Chennai\",\"Hyderabad\",\"Nagpur\",\"Lucknow\",\"Pune\",\"Indore\",\"Jaipur\",\"Ludhiana\",\"Agra\"];\r\n        const destCities = [\"Mumbai\",\"Delhi\",\"Bangalore\",\"Kolkata\",\"Indore\",\"Bhopal\",\"Vadodara\",\"Ghaziabad\",\"Amritsar\",\"Srinagar\"];\r\n        \r\n        //values for Cipher..\r\n        let iv = \"1234123412341234\";\r\n        let key = '12345678123456781234567812345678';\r\n\r\n        var dataString = \"\";\r\n        for(let i=0 ;i <10 ;i++){\r\n            var object = {\r\n                name : names[Math.floor(Math.random()*names.length)],\r\n                origin : originCities[Math.floor(Math.random()*originCities.length)],\r\n                destination : destCities[Math.floor(Math.random()*destCities.length)]\r\n            };\r\n\r\n            //creating secret_key.\r\n            var secret_key = crypto.createHash(\"sha256\").update(JSON.stringify(object)).digest('hex');\r\n            var data = {\r\n                name : object.name,\r\n                origin : object.origin,\r\n                destination : object.destination,\r\n                secret_key : secret_key\r\n            };\r\n\r\n            //aes-256-ctr encryption\r\n            let cipher = crypto.createCipheriv('aes-256-ctr', key, iv);\r\n            let encrypted = cipher.update(JSON.stringify(data), 'utf-8', 'hex');\r\n            encrypted += cipher.final('hex');\r\n            if(i===0 ){\r\n                dataString = dataString + encrypted;\r\n            }else{\r\n                dataString = dataString +\"|\"+encrypted;\r\n            }\r\n        }\r\n        console.log(dataString);\r\n        client.send(dataString);\r\n    };\r\n\r\n    useEffect(() => {\r\n        client.onopen=()=>{\r\n            console.log(\"connected to the server\");\r\n          };\r\n          emitter();\r\n          setInterval(emitter, 10000);\r\n    }, []);\r\n    \r\n      //receiving data from server.\r\n      client.onmessage = (message) => {\r\n        const dataFromServer = JSON.parse(message.data);\r\n        dispatch(addData(dataFromServer));\r\n        console.log(dataFromServer);\r\n      };\r\n\r\n      //connection close function.\r\n      client.onclose = function() {\r\n        console.log('Client Closed.');\r\n        };\r\n\r\n        //user Logout function.\r\n      const handleLogout = ()=>{\r\n        dispatch(logoutUser());\r\n      }\r\n\r\n      //search functionality\r\n      var filtered = []\r\n      if(search!==\"\"){\r\n          filtered = data.filter(dateItem=>{\r\n              return dateItem.name.toLowerCase().indexOf(search.toLowerCase())!==-1;\r\n          })\r\n      }else{\r\n          filtered = data;\r\n      }\r\n\r\n    return (\r\n        <> \r\n            <div className=\"heading\">\r\n                <h1>\r\n                    Home\r\n                </h1>\r\n                <h2 onClick={handleLogout}>\r\n                    LogOut\r\n                </h2>\r\n            </div>\r\n            <div className=\"search-container\">\r\n                <input type=\"text\" value={search} onChange={(e)=>dispatch(updateSearch(e.target.value))} placeholder=\"Search for data using name...\"/>\r\n            </div>\r\n            <table className=\"results\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Index</th>\r\n                    <th>Name</th>\r\n                    <th>Origin</th>\r\n                    <th>Destination</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {filtered.map((data,index)=>(\r\n                \r\n                    <tr key={index}>\r\n                        <td>{index+1}</td>\r\n                        <td>{data.name}</td>\r\n                        <td>{data.origin} </td>\r\n                        <td>{data.destination}</td>\r\n                    </tr>\r\n                \r\n            ))}\r\n            </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { showNotification } from \"../config/noty\";\r\n\r\nexport const loginUser = ()=>{\r\n    showNotification(\"Login Successful\");\r\n    return {\r\n        type : \"LOGIN_USER\"\r\n    };\r\n};\r\n\r\nexport const logoutUser = ()=>{\r\n    showNotification(\"Logout Successful\");\r\n    return{\r\n        type :\"LOGOUT_USER\"\r\n    };\r\n};\r\n\r\nexport const addData = (data)=>{\r\n    return{\r\n        type : \"ADD_DATA\",\r\n        payload : data\r\n    };\r\n};\r\n\r\nexport const updateSearch = (value)=>{\r\n    return{\r\n        type : \"UPDATE_SEARCH\",\r\n        payload : value\r\n    };\r\n};","import React,{useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { loginUser } from \"../redux/actions\";\r\nimport { showNotification } from \"../config/noty\";\r\n\r\nfunction Login({setType}) {\r\n    const dispatch = useDispatch();\r\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    const [value, setValue] = useState({\r\n        username:\"\",\r\n        password:\"\"\r\n    });\r\n    const handleSubmit =async()=>{\r\n        if(value.username===\"\" || value.password===\"\"){\r\n            showNotification(\"Please fill the values!\");\r\n            return;\r\n        }\r\n        var index = users.findIndex(user=>user.username===value.username);\r\n        if(index===-1){\r\n            showNotification(\"Invalid Username or password!\");\r\n            return;\r\n        }else{\r\n            const valid = await bcrypt.compare(value.password,users[index].password);\r\n            if(valid){\r\n                console.log(\"logged\");\r\n                dispatch(loginUser());\r\n            }\r\n            else{\r\n                showNotification(\"Invalid Username or password!\");\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"contents\">\r\n                <div className=\"wtext\">\r\n                    Welcome Back,\r\n                </div>\r\n                <h1>\r\n                    Log In!\r\n                </h1>\r\n                <input type=\"text\" value={value.username} onChange={(e)=>setValue({...value,username:e.target.value})}  placeholder=\"Username\"/>\r\n                <input type=\"password\" value={value.password} onChange={(e)=>setValue({...value,password:e.target.value})}  placeholder=\"Password\"/>\r\n                <button onClick={handleSubmit}>\r\n                    Log In\r\n                </button>\r\n            </div>\r\n            <div className=\"switch\" onClick={()=>setType(\"signup\")}>\r\n                Create account\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n","import React,{useState} from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport { showNotification } from \"../config/noty\";\r\n\r\nfunction SignUp({setType}) {\r\n    var users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState({\r\n        username : \"\",\r\n        password:\"\"\r\n    });\r\n    const handleSubmit =async ()=>{\r\n        if(value.username===\"\" || value.password===\"\"){\r\n            showNotification(\"please fill all the fields!\");\r\n            return;\r\n        }\r\n        var index = users.findIndex(user=>user.username===value.username);\r\n        if(index===-1){\r\n            const hashPsw =await bcrypt.hash(value.password,12);\r\n            const user = {\r\n                username : value.username,\r\n                password : hashPsw\r\n            };\r\n            users.push(user);\r\n            localStorage.setItem(\"users\",JSON.stringify(users));\r\n            setValue({...value,username:\"\",password:\"\"});\r\n        }else{\r\n            showNotification(\"user already exists!\");\r\n            return;\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"signup-container\">\r\n            <div className=\"contents\">\r\n                <div className=\"wtext\">\r\n                    Hello,\r\n                </div>\r\n                <h1>\r\n                    Create account!\r\n                </h1>\r\n                <input type=\"text\" value={value.username} onChange={(e)=>setValue({...value,username:e.target.value})} placeholder=\"Username\"/>\r\n                \r\n                <input type=\"password\" value={value.password} onChange={(e)=>setValue({...value,password:e.target.value})} placeholder=\"Password\"/>\r\n                <button onClick={handleSubmit}>\r\n                    Create account\r\n                </button>\r\n            </div>\r\n            <div className=\"switch\" onClick={()=>setType(\"login\")}>\r\n                Log In\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SignUp;\r\n","import React,{useState} from 'react';\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\n\r\nfunction Authentication() {\r\n    const [type, setType] = useState(\"login\");\r\n    return (\r\n        <>\r\n            {type===\"login\" && <Login\r\n              setType = {setType}\r\n            />}\r\n            {type===\"signup\" && <SignUp\r\n                setType = {setType}\r\n            />}  \r\n        </>\r\n    )\r\n};\r\n\r\nexport default Authentication;\r\n","import './style/App.scss';\nimport { useSelector } from \"react-redux\";\nimport Home from \"./components/Home\";\nimport Authentication from \"./components/Authentication\";\nimport \"../node_modules/noty/lib/noty.css\";\nimport \"../node_modules/noty/lib/themes/nest.css\";\n\nfunction App() {\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\n  return (\n    <div className=\"App\">\n      {isLoggedIn===false && <Authentication/>}\n      {isLoggedIn===true && <Home/>}\n    </div>\n  );\n};\n\nexport default App;\n","const initialState = {\r\n    data:[],\r\n    isLoggedIn :false,\r\n    search:\"\"\r\n};\r\n\r\nconst reducer = (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case \"LOGIN_USER\":\r\n            return{\r\n                ...state,\r\n                isLoggedIn : true\r\n            };\r\n        case \"LOGOUT_USER\":\r\n            return{\r\n                ...state,\r\n                isLoggedIn : false\r\n            }\r\n        case \"ADD_DATA\":\r\n            return{\r\n                ...state,\r\n                data : [...state.data,...action.payload]\r\n            };\r\n        case \"UPDATE_SEARCH\":\r\n            return{\r\n                ...state,\r\n                search : action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer,composeWithDevTools());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}